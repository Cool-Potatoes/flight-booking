dependencies {

	// Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'

	// 공통 모듈
	implementation project(path: ':common')

	// Kafka
	implementation 'org.springframework.kafka:spring-kafka'
	testImplementation 'org.springframework.kafka:spring-kafka-test'

	// Spring Retry
	implementation 'org.springframework.retry:spring-retry:1.3.1'

	// PostgreSQL
	runtimeOnly 'org.postgresql:postgresql'

	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// Redis Session Clustering
	implementation 'org.springframework.session:spring-session-data-redis'

	// Jedis
	implementation 'redis.clients:jedis:4.3.1'

	// QueryDSL 적용을 위한 의존성 (SpringBoot3.0 부터는 jakarta 사용)
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'

	// QueryDSL APT 의존성 (annotation processing을 위한 의존성)
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'

	// Jakarta API 의존성
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// Eureka client
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	// FeignClient, Ribbon
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	// config client
	implementation 'org.springframework.cloud:spring-cloud-starter-config'

	// Zipkin
	implementation 'io.micrometer:micrometer-tracing-bridge-brave'
	implementation 'io.github.openfeign:feign-micrometer'
	implementation 'io.zipkin.reporter2:zipkin-reporter-brave'

	// Resilience4j
	implementation 'io.github.resilience4j:resilience4j-spring-boot3:2.2.0'
	implementation 'org.springframework.boot:spring-boot-starter-aop'

	// Prometheus
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

	// Loki
	implementation 'com.github.loki4j:loki-logback-appender:1.5.1'

	// Spring Boot Actuator
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Valid
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}