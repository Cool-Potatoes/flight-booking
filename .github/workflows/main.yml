name: Multi-Service CI/CD with Docker

on:
  push:
    branches:
      - main
      - 'feature/**'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout repository code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      # Cache Gradle dependencies
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Build all services with Gradle
      - name: Build with Gradle
        run: ./gradlew build

      # Run Tests for all services
      - name: Run Tests
        run: ./gradlew test

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and push Docker images for all services using a loop
      - name: Build and Push Docker Images
        run: |
          SERVICES=("config-server" "eureka-server" "gateway-server" "user-service" "auth-service" "booking-service" "payment-service" "ticket-service" "flight-service" "notification-service")
          for SERVICE in "${SERVICES[@]}"
          do
            echo "Building and pushing Docker image for $SERVICE"
            docker build -t ${{ secrets.DOCKER_USERNAME }}/$SERVICE ./$SERVICE
            docker push ${{ secrets.DOCKER_USERNAME }}/$SERVICE
          done
