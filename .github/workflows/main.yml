name: CI/CD using GitHub Actions & Docker

on:
  push:
    branches:
      - "main"
      - "dev"

permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # Checkout repository code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'

      # Cache Gradle dependencies
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Build the project using Gradle
      - name: Build with Gradle
        run: ./gradlew build -x test

      # Docker Compose Build and Push
      - name: Build and Push Docker Images
        if: contains(github.ref, 'dev') || contains(github.ref, 'main')
        run: |
          docker-compose -f docker-compose.yml build
          docker-compose -f docker-compose.yml push

      # Deploy to dev environment
      - name: Deploy to dev
        if: contains(github.ref, 'dev')
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.HOST_PROD }} # EC2 퍼블릭 IPv4 DNS
          username: ubuntu
          key: ${{ secrets.PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            # SSH를 통해 EC2에서 Docker Compose로 서비스 배포
            cd /home/ubuntu/flight-booking # 실제 경로로 수정필요
            docker-compose pull
            docker-compose up -d
            sudo docker image prune -f
